Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

A subarray is a contiguous part of an array.

Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.

Example 2:
Input: nums = [1]
Output: 1

Example 3:
Input: nums = [5,4,-1,7,8]
Output: 23

=====>>>>>
class Solution {
    public int maxSubArray(int[] nums) {
        int n = nums.length;
        
        //created 2 variables to strore maximum sum value and sum value
        int max = Integer.MIN_VALUE, sum = 0;
        
        
        for(int i=0;i<n;i++){
        //adding array elements and comparing it with maximum sum
            sum += nums[i];
            max = Math.max(sum,max);
            
            //if sum at instance in -ve then it is updated to 0
            if(sum<0) sum = 0;
        }
        return max;
    }
}
